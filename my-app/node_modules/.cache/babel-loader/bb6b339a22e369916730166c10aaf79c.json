{"ast":null,"code":"var _jsxFileName = \"/Users/Student/DSA3101Project-1/my-app/src/DataUpload.js\";\nimport React, { useState } from 'react';\nimport './DataUpload.css';\nimport Papa from 'papaparse';\nfunction DataUpload() {\n  const [file, setFile] = useState(null);\n  const handleUploadClick = () => {\n    if (file) {\n      Papa.parse(file, {\n        complete: function (results) {\n          console.log(results.data);\n          // `results.data` is an array of rows, each row being an array of fields\n          // If your CSV file includes headers, `results.data` will be an array of objects\n          alert('File uploaded and processed successfully!');\n        },\n        header: true,\n        // Set to true if your CSV has headers\n        skipEmptyLines: true,\n        // Skips empty lines\n        dynamicTyping: true // Automatically converts numeric and boolean data\n      });\n    } else {\n      console.log('No file selected for upload.');\n      alert('Please select a CSV file to upload.');\n    }\n  };\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"csvUpload\",\n    accept: \".csv\",\n    onChange: handleFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"uploadBtn\",\n    onClick: handleUploadClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Upload CSV File\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Instructions for Use:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Please upload your dataset in CSV format only.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Click the \\\"Upload CSV File\\\" button after selecting your file.\"))));\n}\nexport default DataUpload;","map":{"version":3,"names":["React","useState","Papa","DataUpload","file","setFile","handleUploadClick","parse","complete","results","console","log","data","alert","header","skipEmptyLines","dynamicTyping","handleFileChange","event","target","files","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","id","accept","onChange","onClick","className"],"sources":["/Users/Student/DSA3101Project-1/my-app/src/DataUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './DataUpload.css'; \nimport Papa from 'papaparse';\n\nfunction DataUpload() {\n    const [file, setFile] = useState(null);\n\n    const handleUploadClick = () => {\n        if (file) {\n            Papa.parse(file, {\n                complete: function(results) {\n                    console.log(results.data);\n                    // `results.data` is an array of rows, each row being an array of fields\n                    // If your CSV file includes headers, `results.data` will be an array of objects\n                    alert('File uploaded and processed successfully!');\n                },\n                header: true, // Set to true if your CSV has headers\n                skipEmptyLines: true, // Skips empty lines\n                dynamicTyping: true, // Automatically converts numeric and boolean data\n            });\n        } else {\n            console.log('No file selected for upload.');\n            alert('Please select a CSV file to upload.');\n        }\n    };\n    \n\n    const handleFileChange = (event) => {\n        setFile(event.target.files[0]);\n    };\n\n    return (\n        <div>\n            <input type=\"file\" id=\"csvUpload\" accept=\".csv\" onChange={handleFileChange} />\n            <button id=\"uploadBtn\" onClick={handleUploadClick}>Upload CSV File</button>\n\n            <div className=\"instructions\">\n                <h3>Instructions for Use:</h3>\n                <ul>\n                    <li>Please upload your dataset in CSV format only.</li>\n                    <li>Click the \"Upload CSV File\" button after selecting your file.</li>\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default DataUpload;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AACzB,OAAOC,IAAI,MAAM,WAAW;AAE5B,SAASC,UAAUA,CAAA,EAAG;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMK,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIF,IAAI,EAAE;MACNF,IAAI,CAACK,KAAK,CAACH,IAAI,EAAE;QACbI,QAAQ,EAAE,SAAAA,CAASC,OAAO,EAAE;UACxBC,OAAO,CAACC,GAAG,CAACF,OAAO,CAACG,IAAI,CAAC;UACzB;UACA;UACAC,KAAK,CAAC,2CAA2C,CAAC;QACtD,CAAC;QACDC,MAAM,EAAE,IAAI;QAAE;QACdC,cAAc,EAAE,IAAI;QAAE;QACtBC,aAAa,EAAE,IAAI,CAAE;MACzB,CAAC,CAAC;IACN,CAAC,MAAM;MACHN,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3CE,KAAK,CAAC,qCAAqC,CAAC;IAChD;EACJ,CAAC;EAGD,MAAMI,gBAAgB,GAAIC,KAAK,IAAK;IAChCb,OAAO,CAACa,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,oBACIpB,KAAA,CAAAqB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACI3B,KAAA,CAAAqB,aAAA;IAAOO,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,WAAW;IAACC,MAAM,EAAC,MAAM;IAACC,QAAQ,EAAEd,gBAAiB;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC9E3B,KAAA,CAAAqB,aAAA;IAAQQ,EAAE,EAAC,WAAW;IAACG,OAAO,EAAE1B,iBAAkB;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,iBAAuB,CAAC,eAE3E3B,KAAA,CAAAqB,aAAA;IAAKY,SAAS,EAAC,cAAc;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzB3B,KAAA,CAAAqB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,uBAAyB,CAAC,eAC9B3B,KAAA,CAAAqB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACI3B,KAAA,CAAAqB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,gDAAkD,CAAC,eACvD3B,KAAA,CAAAqB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,iEAAiE,CACrE,CACH,CACJ,CAAC;AAEd;AAEA,eAAexB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}